name: CI

on:
    push:
        branches:
            - main
        tags:
            - 'v*'
    pull_request:
        branches:
            - main

jobs:
    lint:
        runs-on: ubuntu-22.04
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Setup .NET
              uses: actions/setup-dotnet@v4
              with:
                dotnet-version: '7.0.x'
            - name: Run linter
              run: dotnet tool install -g dotnet-format && dotnet format --verify-no-changes
              working-directory: back/CometeAPI
              
    build:
        runs-on: ubuntu-22.04
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Setup .NET
              uses: actions/setup-dotnet@v4
              with:
                dotnet-version: '7.0.x'
            - name: Restore dependencies
              run: dotnet restore
              working-directory: back/CometeAPI
            - name: Build .NET
              run: dotnet build
              working-directory: back/CometeAPI
            - name: Test
              run: dotnet test --no-build --verbosity normal
              working-directory: back/CometeAPI

    docker_test_back:
        runs-on: ubuntu-22.04
        env:
          IMAGE_NAME: "comete-back-image"
          CONTAINER_NAME: "comete-back-container"
          CONTAINER_PORT: "7176"
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: build image
              run: docker image build --tag="${IMAGE_NAME}" ./back/
            - name: run container
              run: docker container run -d -p "${CONTAINER_PORT}":7176 --name "${CONTAINER_NAME}" "${IMAGE_NAME}"
            - name: Wait container startup
              run: sleep 10
            # - name: http test request
            #   run: curl http://127.0.0.1:"${CONTAINER_PORT}/Folders?idUtilisateur=1"/
            - name: stop container
              run: docker container stop "${CONTAINER_NAME}"
            - name: remove container
              run: docker container rm "${CONTAINER_NAME}"
              
    deploy:
      if: github.event_name == 'push' && contains('refs/heads/main', github.ref)
      runs-on: ubuntu-22.04
      needs: [lint,docker_test_back]
      steps:
        - name: Checkout
          uses: actions/checkout@v4
        - name: Login Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
        - name: Push to Docker Hub
          uses: docker/build-push-action@v4
          with:
            push: true
            context: ./web-project
            tags: ${{ secrets.DOCKERHUB_USERNAME }}/web-project:${{ github.ref_name }}
            
    delivery:
      if: startsWith(github.ref, 'refs/tags/v')
      runs-on: ubuntu-22.04
      needs: [lint,docker_test_back]
      steps:
        - name: Checkout
          uses: actions/checkout@v4
        - name: Login Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
        - name: Push to Docker Hub
          uses: docker/build-push-action@v4
          with:
            push: true
            context: ./web-project
            tags: ${{ secrets.DOCKERHUB_USERNAME }}/web-project:${{ github.ref_name }}
